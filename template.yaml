AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: OpenC-LIFS API

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - PRODUCTION

Mappings:
  Environment:
    PRODUCTION:
      DomainName: kimp.com.br
      SubDomainName: openc-lifs.kimp.com.br
      ModelStorageBucketName: openc-lifs

Resources:
  # ---- Security ----

  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      CertificateTransparencyLoggingPreference: ENABLED
      DomainName: !FindInMap [Environment, !Ref Environment, DomainName]
      ValidationMethod: DNS

  CertificateV2:
    Type: AWS::CertificateManager::Certificate
    Properties:
      CertificateTransparencyLoggingPreference: ENABLED
      DomainName: !FindInMap [Environment, !Ref Environment, SubDomainName]
      ValidationMethod: DNS

  ## TEMPORARY REMOVED FOR COST REDUCTION
  # WebAcl:
  #   Type: AWS::WAFv2::WebACL
  #   Properties:
  #     DefaultAction:
  #       Allow: {}
  #     Name: openc-lifs
  #     Rules:
  #       - Name: AWSManagedRulesAmazonIpRateBased
  #         Action:
  #           Block: {}
  #         Priority: 1
  #         Statement:
  #           RateBasedStatement:
  #             AggregateKeyType: IP
  #             Limit: 500
  #         VisibilityConfig:
  #           CloudWatchMetricsEnabled: False
  #           MetricName: openc-lifs-waf-AWSManagedRulesAmazonIpRateBased
  #           SampledRequestsEnabled: False
  #       - Name: AWSManagedRulesAmazonIpReputationList
  #         OverrideAction:
  #           None: {}
  #         Priority: 2
  #         Statement:
  #           ManagedRuleGroupStatement:
  #             VendorName: AWS
  #             Name: AWSManagedRulesAmazonIpReputationList
  #         VisibilityConfig:
  #           CloudWatchMetricsEnabled: False
  #           MetricName: openc-lifs-waf-AWSManagedRulesAmazonIpReputationList
  #           SampledRequestsEnabled: False
  #     Scope: REGIONAL
  #     VisibilityConfig:
  #       CloudWatchMetricsEnabled: False
  #       MetricName: openc-lifs-waf
  #       SampledRequestsEnabled: False

  # WebAclAssociation:
  #   Type: AWS::WAFv2::WebACLAssociation
  #   Properties:
  #     ResourceArn: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}::/restapis/${Api}/stages/v1
  #     WebACLArn: !GetAtt WebAcl.Arn
  ## END REMOVED FOR COST REDUCTION


  # ---- Storage ----

  ModelBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !FindInMap [Environment, !Ref Environment, ModelStorageBucketName]
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !GetAtt ModelFunction.Arn
            Event: s3:ObjectCreated:Put
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  ModelBucketLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt ModelFunction.Arn
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt ModelBucket.Arn

  # ---- Rest API ----

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      Description: OpenC-LIFS API

  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref Certificate
      DomainName: !FindInMap [Environment, !Ref Environment, DomainName]
      SecurityPolicy: TLS_1_2

  ApiGatewayBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: openc-lifs
      DomainName: !Ref ApiGatewayDomainName
      RestApiId: !Ref Api
      Stage: v1

  # ---- Functions ----

  NewModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/apigateway/new_model
      Handler: main
      Runtime: go1.x
      Events:
        NewModel:
          Type: Api
          Properties:
            Path: /model
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - S3WritePolicy:
            BucketName: !Ref ModelBucket
      Environment:
        Variables:
          BUCKET_NAME: !Ref ModelBucket
          SERVER_HOST: "localhost"

  ModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/s3/openc-lifs/object_created/new_model
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - S3ReadPolicy:
            BucketName: !FindInMap [Environment, !Ref Environment, ModelStorageBucketName]