AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: OpenC-LIFS API

Resources:
  # ---- Storage ----

  ModelBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "openc-lifs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !GetAtt ModelFunction.Arn
            Event: s3:ObjectCreated:Put

  ModelBucketLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: s3.amazonaws.com
      FunctionName: !GetAtt ModelFunction.Arn
      SourceArn: !GetAtt ModelBucket.Arn

  # ---- HTTP API ----

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Description: OpenC-LIFS API

  # ---- Functions ----

  NewModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/apigateway/new_model
      Handler: main
      Runtime: go1.x
      Events:
        NewModel:
          Type: Api
          Properties:
            Path: /model
            Method: post
            RestApiId: !Ref Api
      Policies:
        - S3WritePolicy:
            BucketName: !Ref ModelBucket
      Environment:
        Variables:
          BUCKET_NAME: !Ref ModelBucket
          SERVER_HOST: "localhost"

  ModelFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/s3/open-c-lifs/object_created/new_model
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - S3ReadPolicy:
            BucketName: "openc-lifs"
      Environment:
        Variables:
          BUCKET_NAME: "openc-lifs"